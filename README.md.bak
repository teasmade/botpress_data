# ðŸ¤–DSI Bot DevðŸ¤–

## Notes on Botpress Setup and Initial Exploration

July 2022
Tom Allen
<thomas@searocco.studio>

[Latest Developer Guide]:botpress-docs.s3-website-us-east-1.amazonaws.com/versions/

[SDK Reference]:botpress.com/reference/

## Issues

Build from source currently relies on Node v12 which is now in end-of-life.

[Apparently]:https://github.com/botpress/botpress/issues/4808 an upgrade to use Node v16 is in the pipeline for 2022, but late

## Build From Source Notes

Install Node 12.18.1 (or switch with e.g. NVM, N)
Install Yarn

From the directory where you want to host the instance of Botpress :

 - `git clone git@github.com:botpress/botpress.git && cd botpress`
 - `git reset --hard ff3bd3bddd64e0bac375626ede7cfb4d5b54fa4c` (this is to switch to Botpress v12.28.1)
 - `yarn cache clean`
 - `yarn`
 - `yarn build` (NOTE the build step failed for me when run from GitBash; Windows CMD worked)
 - `yarn start`
 
 Open the Botpress client, by default served on localhost:3000
 On first login enter new username / password
 
## Environment Variables

For a full-build install, .env file should be located at `packages/bp/dist`

`PORT=` port Botpress will run the GUI on
`DATABASE=postgres` use postgres
`DATABASE_URL=` standard postgres connection string e.g. `postgres://login:password@your-db-host.com:5432/your-db-name`
`DATABASE_PG_SEARCH_PATH=` to set a schema (prefix) to use within the db
`DATABASE_POOL={"min":3,"max":10}` e.g. for pooling setup
`EXTERNAL_URL=` the url Botpress will listen to for connections

## User / Password Management

The first time a user connects to a new Botpress install and connects to the GUI, they will be prompted to create a master account. This is the only time this will happen - the free version does not have the possibility of adding additional admins / multiple users.

To reset and be able to create a new master admin user, connect to the Botpress DB and delete the contents of the table `strategy_default`

To add multiple users without an Enterprise license (HACKY ???) ...

Create the first Super Admin users as normal when first connecting.

Copy their entry in the db table `strategy_default` , changing the email to the new user.

In the file `packages/bp/dist/data/global/botpress.config.json` update the array `superAdmins` e.g.

```
  "superAdmins": [
    {
      "email": "thomas@searocco.studio",
      "strategy": "default"
    },
    {
      "email": "jonathan@mkdmpartner.com",
      "strategy": "default"
    }
  ],
```
 
## Clone of Demo Bot

(Need test bot data rar)

Copy contents to `packages/bp/dist/data`

## Custom Modules / Components

The folder `/examples` has both custom component and module template folders with example files and readmes explaining custom module setup.

## Test Webchat Setup

Botpress by default serves on localhost:3000

We call its inject script in index.html, then send it some init config.

## Webchat init config (index.html)

`host` - the URL of the Botpress server
`botId` - the id of the bot to load
`hideWidget` - hides the Botpress default open / close button

## Test config in Botpress GUI

In `Data\global\config\channel-web.json` ...

- To clear recent message history in the Webchat (useful for demos and when a lot of tests are being run) :

`startNewConvoOnTimeout: true` (default false)
`recentConversationLifetime: "2 minutes"` (default "6 hours")

## Vue component setup

Attach a normal click event to an element, calling a method.
We then have access to `window.botpressWebChat`

## Botpress code edits

The schema and customisable code available in the Botpress interface editor instance can, on the Windows executable install setup, be found at `%APPDATA%\Roaming\botpress-electron\binaries\(version)\data`

Loading this folder in VSCode is much more convenient for browsing project / bot structure and updating actions.

**NOTE** if editing via VSCode changes will not be reflected in the running instance.

To restart the Botpress server, update something (e.g. add a restart key and just change its string value) in `\global\botpress.config.json`

This will then trigger an orange gear showing in the bottom right corner of the Botpress GUI ; clicking this will allow you to restart the server.

## Botpress style edits

The default styles for the Botpress webchat interface can be found and updated at `assets\modules\channel-web\default.css`

To add custom styles for webchat, create a stylesheet at `assets\modules\channel-web`

To apply this to built-in webchat: update the global after-bot-mount hook at `global\hooks\after_bot_mount\builtin\00_create_shortlink.js` with the path to this stylesheet, in `chatOptions.config.extraStylesheet`

To apply this to embedded webchat, add the `extraStylesheet: "<path-to-stylesheet-in-botpress>"` option when calling `botpressWebChat.init`

## Proactive (Bot-First) Messaging

By default Botpress will not send a welcome message to a user - it waits for the user to make the first input.

A `before_incoming_middleware` script can be used as a hook to catch an event of type `proactive-trigger` sent by a channel.

Extra data added to this event can be accessed in the hook script via `event.payload.payload`

If the hook sets the Botpress flag `SKIP_DIALOG_ENGINE` to false, it will start the default flow without needing to wait for user input.